// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Photography.Infrastructure.DbContext;

namespace Photography.Infrastructure.Migrations
{
    [DbContext(typeof(PhotographyDbContext))]
    partial class PhotographyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Photography.Infrastructure.Types.Category.Data.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<DateTimeOffset?>("Deleted");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Slug")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset?>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Category","photo");
                });

            modelBuilder.Entity("Photography.Infrastructure.Types.Enquiry.Data.EnquiryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<DateTimeOffset?>("Deleted");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<bool>("Enabled");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("ImageId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset?>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Enquiry","photo");
                });

            modelBuilder.Entity("Photography.Infrastructure.Types.Image.Data.ImageAttributeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<DateTimeOffset?>("Deleted");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Extension")
                        .HasMaxLength(10);

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("Height");

                    b.Property<int>("ImageId");

                    b.Property<bool>("Main");

                    b.Property<string>("Path")
                        .HasMaxLength(400);

                    b.Property<DateTimeOffset?>("Updated");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("ImageAttribute","photo");
                });

            modelBuilder.Entity("Photography.Infrastructure.Types.Image.Data.ImageCategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<DateTimeOffset?>("Deleted");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("ImageId");

                    b.Property<bool>("Main");

                    b.Property<int>("Order");

                    b.Property<DateTimeOffset?>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("ImageCategory","photo");
                });

            modelBuilder.Entity("Photography.Infrastructure.Types.Image.Data.ImageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<DateTimeOffset?>("Deleted");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset?>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Image","photo");
                });

            modelBuilder.Entity("Photography.Infrastructure.Types.Enquiry.Data.EnquiryEntity", b =>
                {
                    b.HasOne("Photography.Infrastructure.Types.Image.Data.ImageEntity", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Photography.Infrastructure.Types.Image.Data.ImageAttributeEntity", b =>
                {
                    b.HasOne("Photography.Infrastructure.Types.Image.Data.ImageEntity")
                        .WithMany("ImageAttributes")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Photography.Infrastructure.Types.Image.Data.ImageCategoryEntity", b =>
                {
                    b.HasOne("Photography.Infrastructure.Types.Category.Data.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Photography.Infrastructure.Types.Image.Data.ImageEntity")
                        .WithMany("ImageCategories")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
